[
  {
    "source": "The default aruba timeout is (\\d+) seconds",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:7",
    "steps": [

    ]
  },
  {
    "source": "^I'm using a clean gemset \"([^\"]*)\"$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:11",
    "steps": [

    ]
  },
  {
    "source": "^a directory named \"([^\"]*)\"$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:15",
    "steps": [

    ]
  },
  {
    "source": "^a file named \"([^\"]*)\" with:$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:19",
    "steps": [
      {
        "name": "a file named \"features/action.feature\" with:",
        "args": [
          {
            "offset": 14,
            "val": "features/action.feature"
          }
        ]
      },
      {
        "name": "a file named \"features/doc_string.feature\" with:",
        "args": [
          {
            "offset": 14,
            "val": "features/doc_string.feature"
          }
        ]
      },
      {
        "name": "a file named \"features/f.feature\" with:",
        "args": [
          {
            "offset": 14,
            "val": "features/f.feature"
          }
        ]
      },
      {
        "name": "a file named \"features/only_background_and_hooks.feature\" with:",
        "args": [
          {
            "offset": 14,
            "val": "features/only_background_and_hooks.feature"
          }
        ]
      },
      {
        "name": "a file named \"features/only_background_and_hooks_steps.rb\" with:",
        "args": [
          {
            "offset": 14,
            "val": "features/only_background_and_hooks_steps.rb"
          }
        ]
      },
      {
        "name": "a file named \"features/step_definitions/doc_string_steps.rb\" with:",
        "args": [
          {
            "offset": 14,
            "val": "features/step_definitions/doc_string_steps.rb"
          }
        ]
      },
      {
        "name": "a file named \"features/step_definitions/multiline_steps.rb\" with:",
        "args": [
          {
            "offset": 14,
            "val": "features/step_definitions/multiline_steps.rb"
          }
        ]
      },
      {
        "name": "a file named \"features/step_definitions/steps.rb\" with:",
        "args": [
          {
            "offset": 14,
            "val": "features/step_definitions/steps.rb"
          }
        ]
      },
      {
        "name": "a file named \"features/support/hooks.rb\" with:",
        "args": [
          {
            "offset": 14,
            "val": "features/support/hooks.rb"
          }
        ]
      },
      {
        "name": "a file named \"features/support/jb/formatter.rb\" with:",
        "args": [
          {
            "offset": 14,
            "val": "features/support/jb/formatter.rb"
          }
        ]
      },
      {
        "name": "a file named \"features/support/ze/formator.rb\" with:",
        "args": [
          {
            "offset": 14,
            "val": "features/support/ze/formator.rb"
          }
        ]
      },
      {
        "name": "a file named \"features/test.feature\" with:",
        "args": [
          {
            "offset": 14,
            "val": "features/test.feature"
          }
        ]
      }
    ]
  },
  {
    "source": "^a (\\d+) byte file named \"([^\"]*)\"$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:23",
    "steps": [

    ]
  },
  {
    "source": "^an empty file named \"([^\"]*)\"$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:27",
    "steps": [

    ]
  },
  {
    "source": "^I write to \"([^\"]*)\" with:$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:31",
    "steps": [

    ]
  },
  {
    "source": "^I overwrite \"([^\"]*)\" with:$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:35",
    "steps": [

    ]
  },
  {
    "source": "^I append to \"([^\"]*)\" with:$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:39",
    "steps": [

    ]
  },
  {
    "source": "^I append to \"([^\"]*)\" with \"([^\"]*)\"$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:43",
    "steps": [

    ]
  },
  {
    "source": "^I remove the file \"([^\"]*)\"$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:47",
    "steps": [

    ]
  },
  {
    "source": "^I cd to \"([^\"]*)\"$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:51",
    "steps": [

    ]
  },
  {
    "source": "^I run \"(.*)\"$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:55",
    "steps": [

    ]
  },
  {
    "source": "^I run `([^`]*)`$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:60",
    "steps": [
      {
        "name": "I run `cucumber -f stepdefs --dry-run`",
        "args": [
          {
            "offset": 7,
            "val": "cucumber -f stepdefs --dry-run"
          }
        ]
      },
      {
        "name": "I run `cucumber -f usage --dry-run`",
        "args": [
          {
            "offset": 7,
            "val": "cucumber -f usage --dry-run"
          }
        ]
      },
      {
        "name": "I run `cucumber -q -t @one -t @three features/tagulicious.feature`",
        "args": [
          {
            "offset": 7,
            "val": "cucumber -q -t @one -t @three features/tagulicious.feature"
          }
        ]
      },
      {
        "name": "I run `cucumber -q -t @one,@three features/tagulicious.feature`",
        "args": [
          {
            "offset": 7,
            "val": "cucumber -q -t @one,@three features/tagulicious.feature"
          }
        ]
      },
      {
        "name": "I run `cucumber -q features/background_tagged_before_on_outline.feature`",
        "args": [
          {
            "offset": 7,
            "val": "cucumber -q features/background_tagged_before_on_outline.feature"
          }
        ]
      },
      {
        "name": "I run `cucumber -q features/failing_background.feature`",
        "args": [
          {
            "offset": 7,
            "val": "cucumber -q features/failing_background.feature"
          }
        ]
      },
      {
        "name": "I run `cucumber -q features/failing_background_after_success.feature`",
        "args": [
          {
            "offset": 7,
            "val": "cucumber -q features/failing_background_after_success.feature"
          }
        ]
      },
      {
        "name": "I run `cucumber -q features/multiline_args_background.feature`",
        "args": [
          {
            "offset": 7,
            "val": "cucumber -q features/multiline_args_background.feature"
          }
        ]
      },
      {
        "name": "I run `cucumber -q features/passing_background.feature:9`",
        "args": [
          {
            "offset": 7,
            "val": "cucumber -q features/passing_background.feature:9"
          }
        ]
      },
      {
        "name": "I run `cucumber -q features/passing_background.feature`",
        "args": [
          {
            "offset": 7,
            "val": "cucumber -q features/passing_background.feature"
          }
        ]
      },
      {
        "name": "I run `cucumber -q features/pending_background.feature`",
        "args": [
          {
            "offset": 7,
            "val": "cucumber -q features/pending_background.feature"
          }
        ]
      },
      {
        "name": "I run `cucumber -q features/scenario_outline_failing_background.feature`",
        "args": [
          {
            "offset": 7,
            "val": "cucumber -q features/scenario_outline_failing_background.feature"
          }
        ]
      },
      {
        "name": "I run `cucumber -q features/scenario_outline_passing_background.feature`",
        "args": [
          {
            "offset": 7,
            "val": "cucumber -q features/scenario_outline_passing_background.feature"
          }
        ]
      },
      {
        "name": "I run `cucumber -q features/tagulicious.feature`",
        "args": [
          {
            "offset": 7,
            "val": "cucumber -q features/tagulicious.feature"
          }
        ]
      },
      {
        "name": "I run `cucumber features/f.feature:2`",
        "args": [
          {
            "offset": 7,
            "val": "cucumber features/f.feature:2"
          }
        ]
      },
      {
        "name": "I run `cucumber features/f.feature:6`",
        "args": [
          {
            "offset": 7,
            "val": "cucumber features/f.feature:6"
          }
        ]
      },
      {
        "name": "I run `cucumber features/only_background_and_hooks.feature`",
        "args": [
          {
            "offset": 7,
            "val": "cucumber features/only_background_and_hooks.feature"
          }
        ]
      },
      {
        "name": "I run `cucumber features/test.feature:5 -f progress`",
        "args": [
          {
            "offset": 7,
            "val": "cucumber features/test.feature:5 -f progress"
          }
        ]
      },
      {
        "name": "I run `cucumber features/test.feature:8 -f progress`",
        "args": [
          {
            "offset": 7,
            "val": "cucumber features/test.feature:8 -f progress"
          }
        ]
      },
      {
        "name": "I run `cucumber`",
        "args": [
          {
            "offset": 7,
            "val": "cucumber"
          }
        ]
      }
    ]
  },
  {
    "source": "^I successfully run \"(.*)\"$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:64",
    "steps": [

    ]
  },
  {
    "source": "^I successfully run `(.*?)`(?: for up to (\\d+) seconds)?$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:71",
    "steps": [

    ]
  },
  {
    "source": "^I run \"([^\"]*)\" interactively$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:75",
    "steps": [

    ]
  },
  {
    "source": "^I run `([^`]*)` interactively$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:80",
    "steps": [

    ]
  },
  {
    "source": "^I type \"([^\"]*)\"$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:84",
    "steps": [

    ]
  },
  {
    "source": "^I wait for (?:output|stdout) to contain \"([^\"]*)\"$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:88",
    "steps": [

    ]
  },
  {
    "source": "^the output should contain \"([^\"]*)\"$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:97",
    "steps": [
      {
        "name": "the output should contain \"WARNING\"",
        "args": [
          {
            "offset": 27,
            "val": "WARNING"
          }
        ]
      }
    ]
  },
  {
    "source": "^the output from \"([^\"]*)\" should contain \"([^\"]*)\"$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:101",
    "steps": [

    ]
  },
  {
    "source": "^the output from \"([^\"]*)\" should not contain \"([^\"]*)\"$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:105",
    "steps": [

    ]
  },
  {
    "source": "^the output should not contain \"([^\"]*)\"$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:109",
    "steps": [

    ]
  },
  {
    "source": "^the output should contain:$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:113",
    "steps": [
      {
        "name": "the output should contain:",
        "args": [

        ]
      }
    ]
  },
  {
    "source": "^the output should not contain:$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:117",
    "steps": [

    ]
  },
  {
    "source": "^the output(?: from \"(.*?)\")? should contain exactly \"(.*?)\"$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:123",
    "steps": [

    ]
  },
  {
    "source": "^the output(?: from \"(.*?)\")? should contain exactly:$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:129",
    "steps": [

    ]
  },
  {
    "source": "^the output should match /([^/]*)/$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:137",
    "steps": [

    ]
  },
  {
    "source": "^the output should match:$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:141",
    "steps": [

    ]
  },
  {
    "source": "^the output should not match /([^/]*)/$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:146",
    "steps": [

    ]
  },
  {
    "source": "^the output should not match:$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:150",
    "steps": [

    ]
  },
  {
    "source": "^the exit status should be (\\d+)$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:154",
    "steps": [

    ]
  },
  {
    "source": "^the exit status should not be (\\d+)$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:158",
    "steps": [

    ]
  },
  {
    "source": "^it should (pass|fail) with:$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:162",
    "steps": [
      {
        "name": "it should fail with:",
        "args": [
          {
            "offset": 10,
            "val": "fail"
          }
        ]
      },
      {
        "name": "it should pass with:",
        "args": [
          {
            "offset": 10,
            "val": "pass"
          }
        ]
      }
    ]
  },
  {
    "source": "^it should (pass|fail) with exactly:$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:166",
    "steps": [
      {
        "name": "it should fail with exactly:",
        "args": [
          {
            "offset": 10,
            "val": "fail"
          }
        ]
      },
      {
        "name": "it should pass with exactly:",
        "args": [
          {
            "offset": 10,
            "val": "pass"
          }
        ]
      }
    ]
  },
  {
    "source": "^it should (pass|fail) with regexp?:$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:170",
    "steps": [

    ]
  },
  {
    "source": "^the stderr(?: from \"(.*?)\")? should contain( exactly)? \"(.*?)\"$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:179",
    "steps": [

    ]
  },
  {
    "source": "^the stderr(?: from \"(.*?)\")? should contain( exactly)?:$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:191",
    "steps": [

    ]
  },
  {
    "source": "^the stdout(?: from \"(.*?)\")? should contain( exactly)? \"(.*?)\"$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:203",
    "steps": [

    ]
  },
  {
    "source": "^the stdout(?: from \"(.*?)\")? should contain( exactly)?:$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:215",
    "steps": [

    ]
  },
  {
    "source": "^the stderr should not contain \"([^\"]*)\"$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:223",
    "steps": [

    ]
  },
  {
    "source": "^the stderr should not contain:$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:227",
    "steps": [

    ]
  },
  {
    "source": "^the (stderr|stdout) should not contain anything$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:231",
    "steps": [

    ]
  },
  {
    "source": "^the stdout should not contain \"([^\"]*)\"$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:236",
    "steps": [

    ]
  },
  {
    "source": "^the stdout should not contain:$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:240",
    "steps": [

    ]
  },
  {
    "source": "^the stdout from \"([^\"]*)\" should not contain \"([^\"]*)\"$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:244",
    "steps": [

    ]
  },
  {
    "source": "^the stderr from \"([^\"]*)\" should not contain \"([^\"]*)\"$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:248",
    "steps": [

    ]
  },
  {
    "source": "^the file \"([^\"]*)\" should not exist$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:252",
    "steps": [

    ]
  },
  {
    "source": "^the following files should exist:$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:256",
    "steps": [

    ]
  },
  {
    "source": "^the following files should not exist:$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:260",
    "steps": [

    ]
  },
  {
    "source": "^a file named \"([^\"]*)\" should exist$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:264",
    "steps": [

    ]
  },
  {
    "source": "^a file named \"([^\"]*)\" should not exist$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:268",
    "steps": [

    ]
  },
  {
    "source": "^a (\\d+) byte file named \"([^\"]*)\" should exist$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:272",
    "steps": [

    ]
  },
  {
    "source": "^the following directories should exist:$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:276",
    "steps": [

    ]
  },
  {
    "source": "^the following directories should not exist:$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:280",
    "steps": [

    ]
  },
  {
    "source": "^a directory named \"([^\"]*)\" should exist$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:284",
    "steps": [

    ]
  },
  {
    "source": "^a directory named \"([^\"]*)\" should not exist$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:288",
    "steps": [

    ]
  },
  {
    "source": "^the file \"([^\"]*)\" should contain \"([^\"]*)\"$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:292",
    "steps": [

    ]
  },
  {
    "source": "^the file \"([^\"]*)\" should not contain \"([^\"]*)\"$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:296",
    "steps": [

    ]
  },
  {
    "source": "^the file \"([^\"]*)\" should contain:$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:300",
    "steps": [

    ]
  },
  {
    "source": "^the file \"([^\"]*)\" should contain exactly:$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:304",
    "steps": [

    ]
  },
  {
    "source": "^the file \"([^\"]*)\" should match /([^/]*)/$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:308",
    "steps": [

    ]
  },
  {
    "source": "^the file \"([^\"]*)\" should not match /([^/]*)/$",
    "flags": "",
    "file_colon_line": "aruba-0.5.1/lib/aruba/cucumber.rb:312",
    "steps": [

    ]
  },
  {
    "source": "^I run cucumber \"(.+)\"$",
    "flags": "",
    "file_colon_line": "features/step_definitions/cucumber_steps.rb:1",
    "steps": [
      {
        "name": "I run cucumber \"--format json features/doc_string.feature\"",
        "args": [
          {
            "offset": 16,
            "val": "--format json features/doc_string.feature"
          }
        ]
      },
      {
        "name": "I run cucumber \"--format json features/one_passing_one_failing.feature\"",
        "args": [
          {
            "offset": 16,
            "val": "--format json features/one_passing_one_failing.feature"
          }
        ]
      },
      {
        "name": "I run cucumber \"-b --format json features/embed.feature\"",
        "args": [
          {
            "offset": 16,
            "val": "-b --format json features/embed.feature"
          }
        ]
      },
      {
        "name": "I run cucumber \"features/f.feature --format Jb::Formatter\"",
        "args": [
          {
            "offset": 16,
            "val": "features/f.feature --format Jb::Formatter"
          }
        ]
      },
      {
        "name": "I run cucumber \"features/f.feature --format Ze::Formator\"",
        "args": [
          {
            "offset": 16,
            "val": "features/f.feature --format Ze::Formator"
          }
        ]
      },
      {
        "name": "I run cucumber \"features/f.feature --format debug --expand\"",
        "args": [
          {
            "offset": 16,
            "val": "features/f.feature --format debug --expand"
          }
        ]
      },
      {
        "name": "I run cucumber \"features/f.feature --format debug\"",
        "args": [
          {
            "offset": 16,
            "val": "features/f.feature --format debug"
          }
        ]
      },
      {
        "name": "I run cucumber \"features/foo.feature\"",
        "args": [
          {
            "offset": 16,
            "val": "features/foo.feature"
          }
        ]
      },
      {
        "name": "I run cucumber \"features/one_passing_one_failing.feature -r features -f rerun\"",
        "args": [
          {
            "offset": 16,
            "val": "features/one_passing_one_failing.feature -r features -f rerun"
          }
        ]
      },
      {
        "name": "I run cucumber \"features/sample.feature --tags ~@wip\"",
        "args": [
          {
            "offset": 16,
            "val": "features/sample.feature --tags ~@wip"
          }
        ]
      },
      {
        "name": "I run cucumber \"features/sample.feature -r features --tags ~@wip\"",
        "args": [
          {
            "offset": 16,
            "val": "features/sample.feature -r features --tags ~@wip"
          }
        ]
      },
      {
        "name": "I run cucumber \"features/scenario_outline_with_undefined_steps.feature --format html --expand \"",
        "args": [
          {
            "offset": 16,
            "val": "features/scenario_outline_with_undefined_steps.feature --format html --expand "
          }
        ]
      }
    ]
  },
  {
    "source": "^it\\ should\\ pass$",
    "flags": "",
    "file_colon_line": "features/step_definitions/cucumber_steps.rb:5",
    "steps": [
      {
        "name": "it should pass",
        "args": [

        ]
      }
    ]
  },
  {
    "source": "^it should (pass|fail) with JSON:$",
    "flags": "",
    "file_colon_line": "features/step_definitions/cucumber_steps.rb:9",
    "steps": [
      {
        "name": "it should fail with JSON:",
        "args": [
          {
            "offset": 10,
            "val": "fail"
          }
        ]
      },
      {
        "name": "it should pass with JSON:",
        "args": [
          {
            "offset": 10,
            "val": "pass"
          }
        ]
      }
    ]
  },
  {
    "source": "^a directory without standard Cucumber project directory structure$",
    "flags": "",
    "file_colon_line": "features/step_definitions/cucumber_steps.rb:23",
    "steps": [
      {
        "name": "a directory without standard Cucumber project directory structure",
        "args": [

        ]
      }
    ]
  },
  {
    "source": "^a scenario with a step that looks like this:$",
    "flags": "",
    "file_colon_line": "features/step_definitions/cucumber_steps.rb:29",
    "steps": [
      {
        "name": "a scenario with a step that looks like this:",
        "args": [

        ]
      }
    ]
  },
  {
    "source": "^a step definition that looks like this:$",
    "flags": "",
    "file_colon_line": "features/step_definitions/cucumber_steps.rb:35",
    "steps": [
      {
        "name": "a step definition that looks like this:",
        "args": [

        ]
      }
    ]
  },
  {
    "source": "^I run the feature with the (\\w+) formatter$",
    "flags": "",
    "file_colon_line": "features/step_definitions/cucumber_steps.rb:39",
    "steps": [
      {
        "name": "I run the feature with the progress formatter",
        "args": [
          {
            "offset": 27,
            "val": "progress"
          }
        ]
      }
    ]
  },
  {
    "source": "^I am running spork in the background$",
    "flags": "",
    "file_colon_line": "features/step_definitions/drb_steps.rb:1",
    "steps": [
      {
        "name": "I am running spork in the background",
        "args": [

        ]
      }
    ]
  },
  {
    "source": "^jeg drikker en \"([^\"]*)\"$",
    "flags": "",
    "file_colon_line": "features/step_definitions/iso-8859-1_steps.rb:6",
    "steps": [
      {
        "name": "jeg drikker en \"øl\"",
        "args": [
          {
            "offset": 16,
            "val": "øl"
          }
        ]
      }
    ]
  },
  {
    "source": "^skal de andre si \"([^\"]*)\"$",
    "flags": "",
    "file_colon_line": "features/step_definitions/iso-8859-1_steps.rb:10",
    "steps": [
      {
        "name": "skal de andre si \"skål\"",
        "args": [
          {
            "offset": 18,
            "val": "skål"
          }
        ]
      }
    ]
  }
]